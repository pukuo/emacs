;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(denote--keyword-history denote--title-history consult--line-history file-name-history minibuffer-history extended-command-history))
(setq denote--keyword-history '("reading"))
(setq denote--title-history '("archlinux"))
(setq consult--line-history '("user0"))
(setq file-name-history '("~/Bugfixer/" "~/Hugo/Sites/golog/content/posts/Rust简明指南&Struct.md" "~/Bugfixer/rust/hello_match/src/main.rs" "~/Bugfixer/" "~/Notes/emacs-notes/org/arch.org" "~/Notes/emacs-notes/org/" "~/Bugfixer/rust/hello_world/src/main.rs" "~/.config/fish/config.fish" "~/.ssh/id_rsa.pub" "~/.config/nvim/lua/plugins/lspconfig.lua" "~/.emacs.d/emacs-config.org" "~/.config/nvim/init.lua" "~/Bugfixer/rust/rust_trait4/src/main.rs" "~/Notes/emacs-notes/org/hello_rust.org" "~/Notes/emacs-notes/org/" "~/Bugfixer/rust/rust_trait4/src/main.rs" "~/.config/wezterm/wezterm.lua" "~/Bugfixer/rust/" "~/Notes/emacs-notes/org/hello.org" "~/Bugfixer/rust/" "~/Bugfixer/rust/rust_T/src/main.rs" "~/Bugfixer/rust/" "~/Bugfixer/rust/rust_hashmap/src/main.rs" "~/.config/rofi/config.rasi" "~/Bugfixer/rust/rust_err/hello.txt" "~/Bugfixer/rust/" "~/Bugfixer/rust/rust_hashmap/src/main.rs" "~/Bugfixer/rust/" "~/Bugfixer/rust/rust_vector/src/main.rs" "~/Bugfixer/rust/" "~/Bugfixer/rust/rust_enum/src/main.rs" "~/Notes/emacs-notes/org/" "~/Notes/emacs-notes/" "~/Bugfixer/rust/" "~/Bugfixer/rust/hello_world/src/main.rs" "~/Notes/rust/vx_notebook/vx_notebook.json" "~/Notes/rust/vx_notebook/" "~/Notes/rust/vx.json" "~/Bugfixer/rust/hello_world/src/main.rs" "~/.emacs.d/emacs-config.org" "~/Bugfixer/rust/hello_world/src/main.rs" "~/.emacs.d/helloemacs.js"))
(setq minibuffer-history '("cargo new rust_trait4" "cargo new rust_trait3" "cargo new rust_trait2" "cargo new rust_trait" "cargo new rust_T2" "cargo new rust_T" "touch hello.txt" "cargo new rust_err" "cargo new rust_hashmap" "cargo new rust_string" "r                 # alias: run" "cargo new rust_vector" "r                 # alias: run" "cargo new rust_option" "r                 # alias: run" "cargo new rust_enum" "r                 # alias: run" "cargo new rust_struct2" "r                 # alias: run" "cargo new rust_struct" "pwd" "r                 # alias: run" "cargo-mode" "rust-mode"))
(setq extended-command-history '("package-refresh-contents" "eshell" "package-refresh-contents" "magit" "package-refresh-contents" "eshell-command" "package-refresh-contents" "magit" "package-refresh-contents" "magit" "package-refresh-contents" "eshell-command" "package-refresh-contents" "eshell-command" "cargo-mode-execute-task" "eshell-command" "cargo-mode-execute-task" "eshell-command" "package-refresh-contents" "cargo-mode-execute-task" "eshell-command" "cargo-mode-execute-task" "eshell-command" "cargo-mode-execute-task" "eshell-command" "cargo-mode-execute-task" "cargo-mode-test" "package-install" "package-refresh-contents"))
(setq mark-ring 'nil)
(setq search-ring 'nil)
(setq regexp-search-ring 'nil)
(setq extended-command-history '("package-refresh-contents" "eshell" "package-refresh-contents" "magit" "package-refresh-contents" "eshell-command" "package-refresh-contents" "magit" "package-refresh-contents" "magit" "package-refresh-contents" "eshell-command" "package-refresh-contents" "eshell-command" "cargo-mode-execute-task" "eshell-command" "cargo-mode-execute-task" "eshell-command" "package-refresh-contents" "cargo-mode-execute-task" "eshell-command" "cargo-mode-execute-task" "eshell-command" "cargo-mode-execute-task" "eshell-command" "cargo-mode-execute-task" "cargo-mode-test" "package-install" "package-refresh-contents"))
